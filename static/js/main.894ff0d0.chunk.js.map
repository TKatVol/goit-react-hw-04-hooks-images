{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","services/images-api.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.jsx","App.js","reportWebVitals.js","index.js","components/ImageGalleryItem/ImageGalleryItem.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSarchQuery","className","s","event","preventDefault","SearchForm","type","SearchFormButton","SearchFormButtonLabel","value","onChange","target","SearchFormInput","autoComplete","autoFocus","placeholder","ImageGalleryItem","imageItem","webformatURL","largeImageURL","tags","src","alt","ImageGalleryItemImage","propType","PropTypes","arrayOf","string","isRequired","API_KEY","BASE_URL","searchImages","page","a","fetch","response","json","data","imagesApi","fetchImages","Button","title","onClick","modalRoot","document","querySelector","Modal","onClose","children","handleKeydownEsc","useCallback","code","useEffect","window","addEventListener","removeEventListener","handleBackdropClick","currentTarget","createPortal","Overlay","ImageGallery","setPage","query","setQuery","gallery","setGallery","totalImages","setTotalImages","imageCounter","setImageCounter","loading","setLoading","showModal","setShowModal","largeImageSrc","setLargeImageSrc","largeImageAlt","setLargeImageAlt","then","total","state","hits","scrollToBottom","alert","finally","scrollTo","top","documentElement","scrollHeight","behavior","nodeName","getAttribute","map","id","color","height","width","loader","App","setSearchQuery","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.894ff0d0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3laT6\",\"Modal\":\"Modal_Modal__iVf15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ImageGallery_container__RYu4x\",\"ImageGallery\":\"ImageGallery_ImageGallery__3UvQa\",\"loader\":\"ImageGallery_loader__afwxI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1wlak\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__1JlEb\",\"SearchForm\":\"Searchbar_SearchForm__32zUy\",\"SearchFormButton\":\"Searchbar_SearchFormButton___PAz6\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3Svw3\",\"SearchFormInput\":\"Searchbar_SearchFormInput__LuReF\"};","import { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from '../Searchbar/Searchbar.module.css';\r\n\r\nexport function Searchbar({ onSubmit }) {\r\n    const [searchQuery, setSarchQuery] = useState('');\r\n    \r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        onSubmit(searchQuery);\r\n        setSarchQuery('');\r\n    };\r\n\r\n    const handleChange = event => setSarchQuery(event.target.value);\r\n\r\n    return (\r\n        <header className={s.Searchbar}>\r\n            <form onSubmit={handleSubmit} className={s.SearchForm}>\r\n                <button type=\"submit\" className={s.SearchFormButton}>\r\n                    <span className={s.SearchFormButtonLabel}>Search</span>\r\n                </button>\r\n                <input\r\n                    value={searchQuery}\r\n                    onChange={handleChange}\r\n                    className={s.SearchFormInput}\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n        </header>\r\n    )\r\n \r\n}\r\n   \r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import PropTypes from 'prop-types';\r\nimport s from '../ImageGalleryItem/ImageGalleryItem.module.css';\r\n\r\nexport function ImageGalleryItem({ imageItem }) {\r\n       \r\n    const { webformatURL, largeImageURL, tags } = imageItem;\r\n    return (\r\n        <li className={s.ImageGalleryItem} >\r\n            <img src={webformatURL} alt={tags} data-large-img-src={largeImageURL} data-large-img-alt={tags} className={s.ImageGalleryItemImage} />\r\n        </li>\r\n    )\r\n}\r\n\r\nImageGalleryItem.propType = {\r\n    imageItem: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n}\r\n","const API_KEY = '22469599-b799b36696d1999c47d80d468';\r\nconst BASE_URL = 'https://pixabay.com/api';\r\n\r\nasync function fetchImages(searchImages, page ) {\r\n    \r\n    const response = await fetch(`${BASE_URL}/?q=${searchImages}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`)\r\n    const data = await response.json();\r\n\r\n    return data;\r\n}\r\n\r\nconst imagesApi = {\r\n    fetchImages,\r\n};\r\n\r\nexport { imagesApi };\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from '../Button/Button.module.css';\r\n\r\nexport function Button({ title, onClick }) {\r\n    return <button className={s.Button} onClick={onClick}>{title}</button>\r\n}\r\n\r\nButton.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    onClick: PropTypes.func.isRequired,\r\n}","import { createPortal } from 'react-dom';\r\nimport { useEffect, useCallback } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from '../Modal/Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nexport function Modal({ onClose, children }) {\r\n\r\n    const handleKeydownEsc = useCallback(event => {\r\n        if (event.code === 'Escape') {\r\n            onClose();\r\n        }\r\n    }, [onClose])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeydownEsc);\r\n\r\n        return () => window.removeEventListener('keydown', handleKeydownEsc);\r\n    }, [handleKeydownEsc])\r\n\r\n    const handleBackdropClick = useCallback(event => {\r\n        if (event.currentTarget === event.target) {\r\n            onClose();\r\n        }\r\n    }, [onClose])\r\n\r\n    return createPortal(\r\n        <div className={s.Overlay} onClick={handleBackdropClick}>\r\n            <div className={s.Modal}>\r\n                {children}\r\n            </div>\r\n        </div>,\r\n        modalRoot,\r\n    )\r\n}\r\n\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node,\r\n}\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport Loader from \"react-loader-spinner\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ImageGalleryItem } from '../ImageGalleryItem/ImageGalleryItem';\r\nimport { imagesApi } from '../../services/images-api';\r\nimport { Button } from '../Button/Button';\r\nimport { Modal } from '../Modal/Modal';\r\n\r\nimport s from '../ImageGallery/ImageGallery.module.css';\r\n\r\nexport function ImageGallery({ searchQuery }) {\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState(null);\r\n    const [gallery, setGallery] = useState([]);\r\n    const [totalImages, setTotalImages] = useState(0);\r\n    const [imageCounter, setImageCounter] = useState(0);\r\n    const [loading, setLoading] = useState(false);\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [largeImageSrc, setLargeImageSrc] = useState('');\r\n    const [largeImageAlt, setLargeImageAlt] = useState('');\r\n\r\n    if (searchQuery !== query) {\r\n        setPage(1);\r\n        setGallery([]);\r\n        setTotalImages(0);\r\n        setImageCounter(0);\r\n        setQuery(searchQuery);  \r\n    }\r\n    \r\n    useEffect(() => {\r\n        \r\n        if (!searchQuery) {\r\n            return;\r\n        }\r\n       \r\n        setLoading(true);\r\n\r\n        imagesApi.fetchImages(searchQuery, page)\r\n            .then(data => {\r\n        \r\n                if (data.total === 0) {\r\n                    alert('Oops.. Not found 😟');\r\n                    return;\r\n                }\r\n             \r\n                setGallery(state => [...state, ...data.hits]);\r\n                setTotalImages(data.total);\r\n                scrollToBottom();\r\n            })\r\n            .finally(() => setLoading(false))\r\n                   \r\n    }, [searchQuery, page])\r\n    \r\n    useEffect(() => {\r\n        setImageCounter(totalImages - (page * 12) + 12);\r\n    }, [page, totalImages])\r\n\r\n    const handleLoadMoreButtonClick = () => {\r\n        setPage(state => state + 1);\r\n    }\r\n\r\n    const handleImageClick = event => {\r\n        if (event.target.nodeName !== 'IMG') {\r\n            return;\r\n        }\r\n\r\n        setShowModal(true);\r\n        setLargeImageSrc(event.target.getAttribute('data-large-img-src'));\r\n        setLargeImageAlt(event.target.getAttribute('data-large-img-alt'));\r\n    }\r\n\r\n    const closeModal = () => {\r\n        setShowModal(false);\r\n        setLargeImageSrc('');\r\n        setLargeImageAlt('');\r\n    }\r\n\r\n    const scrollToBottom = () => {\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n        });\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <ul className={s.ImageGallery} onClick={handleImageClick}> \r\n                {gallery && gallery.map(hits => {\r\n                    return <ImageGalleryItem key={hits.id} imageItem={hits}/>\r\n                    })\r\n                }\r\n            </ul>\r\n\r\n            {loading && <Loader type=\"Hearts\" color=\"#3f51b5\" height={80} width={80} className={s.loader} />}\r\n\r\n            {imageCounter > 12 && !loading && <Button title=\"Load more\" onClick={handleLoadMoreButtonClick} />}\r\n                \r\n            {showModal &&\r\n                <Modal onClose={closeModal} > \r\n                    <img src={largeImageSrc} alt={largeImageAlt} />\r\n                </Modal>\r\n            }\r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    searchQuery: PropTypes.string.isRequired,\r\n}\r\n\r\n","import { useState } from 'react';\nimport { Searchbar } from './components/Searchbar/Searchbar';\nimport { ImageGallery } from './components/ImageGallery/ImageGallery';\n\nimport './App.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  \n  const handleFormSubmit = searchQuery => setSearchQuery( searchQuery );\n  \n  return (\n    <div className=\"App\">\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery searchQuery={searchQuery} />        \n    </div>\n  );\n  \n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__1PzcV\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__spetl\"};"],"sourceRoot":""}